import timeit


def euclidean(N, x):
    A = N
    B = x
    U = 0
    V = 1

    while True:
        q = A // B

        tempA = B
        tempB = A - q * B
        A = tempA
        B = tempB

        new_U = V
        new_V = U - q * V
        U = new_U
        V = new_V

        if B == 0:
            d = A
            u = U
            v = (d - x * u) // N
            return (d, u, v)


def inverse(number, modulo):
    result = 0
    e = euclidean(modulo, number)
    if e[0] != 1:
        print("No inverse")
        return result
    else:
        result = (e[1] % modulo + modulo) % modulo
        return result


# N = 13
# x = 5
# wynik2 = 8

# number = 12603105321135622767305477321226264526101452611580750172942995573642583834115518597214611628755756515637031503762433821635382941259415596191772792339558820602095032907912585193142776570851767147616224169462438014704841831725007609378775100884540643665648152752437883986935155645486418494891325614906031
# modulo = 2769045642022523667371081021602958417014002124467046994941304601702820194967604987076155398363701721764005427759217199347883589470778816792529785239303990824465363001758796647020445293453044537960048883990885837632980488653374812841793911331995186720998765856236145146590431589364455399695247389824557

number = 114490559043126076738153358744966087681953386182425573483404112031815201175394209446530718026054824536822393073768479394115941549919359895111725996451157521700161443180727996657988659990597046662665463765926411024939606661260667863176902524560156078905991604769638931779122326545032024160910696661027
modulo = 393847041276178206491396243212274945872070776985043237184044451747690284405703994938020592656894726519747568678264497623311685635604918597230323269556886420453871930400418329075629418384691272372863859327955756407280218398219170544142787007265395975232901233778590659508114573048528189504436995545652
result = 176437173273670446116561773124856132384693892713711071096077602942883563667648684471246702996573458494081467444229761890204265536548016946836362236321342627584322874302358626492381458968833918927624598808439534606403278344951731148436509537871103713405150203371182245606458112707138645694736668802999

# e = euclidean(number, modulo)
# print(" d = {}\n u = {}\n v = {}".format(str(e[0]), str(e[1]), str(e[2])))
start = timeit.default_timer()
i = inverse(number, modulo)
stop = timeit.default_timer()
print("Odwrotność phi: {}".format(i))
if i == result:
    print("Completed in time: {}".format(stop - start))
else:
    print("Wynik niepoprawny: {}".format(i))
