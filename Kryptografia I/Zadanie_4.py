import timeit


def fast_exp(b, e, m):
    r = 1
    if 1 & e:
        r = b
    while e:
        e >>= 1
        b = (b * b) % m
        if e & 1: r = (r * b) % m
    return r


def quadratic(b, p):
    if p <= 2:
        return False
    k = (p - 1) // 2
    res = fast_exp(b, k, p)
    if res == 1 or res == 0:
        return True
    else:
        return False


# p = 557447646341221346636192772896901610558710893835414944403480118710131817164269282839046936145176310843035027195369552947724772574976124889744487830405662539681582010111238770266408227840530530562128937575104894419356210796751265695974980542800695284666417470596597594320307059087588663353662759831219
# b = 393847041276178206491396243212274945872070776985043237184044451747690284405703994938020592656894726519747568678264497623311685635604918597230323269556886420453871930400418329075629418384691272372863859327955756407280218398219170544142787007265395975232901233778590659508114573048528189504436995545652

b = 4
p = 13

start = timeit.default_timer()
s = quadratic(b, p)
stop = timeit.default_timer()
if s:
    print("{}\njest resztą kwadratową\n{}".format(b,p))
    print("Completed in time: {}".format(stop - start))
else:
    print("{}\nnie jest resztą kwadratową\n{}".format(b,p))
