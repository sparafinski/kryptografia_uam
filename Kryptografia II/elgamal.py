#################################################################################
#
# Funkcja która oblicza n-tą wielokrotność punktu P.
#
#################################################################################
from math import floor

import worker as w
import Zadanie_5 as z5
import Zadanie_4 as z4
import Zadanie_3 as z3


def elliptic_curve_elgammal(A, B, p ,x1, y1, x2, y2, x):
    xc1 = z5.n_multiple_point(x, x1, y1, A, B, p)
    xc1_minus = z3.find_opposite_point(xc1[0], xc1[1], p)
    x3, y3 = z4.sum_of_two_points(x2, y2, xc1_minus[0], xc1_minus[1], A, B, p)
    return x3, y3


def decodin_message(x, y, u):
    m = floor((x-1)/u)
    return m


p=731308150714321957849734816484321327119306335527666142772981103429614098294367916616192051
A=650436649561455070461892045239297273810338327060582149067290109178304889026764087827222303
B=393651706462824198277343570733362683428089922651104369418553164436556395018275495301846803

x3=34791770906820122752501140104306036053164090009865871144108139346780277134807427702262028
y3=21066589872392983967815591132354523605031924537129956532523648621530097883764976935325171
x4=186698539519726941523101574150863594380763252545073110418528772061794171311499124283340359
y4=139702463401317072232031962287250501182328856243084829793001376804676448040153050195056294

x = 672066757942005027592684629780121319559766320138386156339177050193566909314907208798471016

print(elliptic_curve_elgammal(A, B, p, x3, y3, x4, y4, x))
x5 = 161527769144648125516616552305430215523209938960948885119763789863298885352623739933340770
y5 = 535388071375765111892419320980278561695403441127487734617482964160721504503181645564425574